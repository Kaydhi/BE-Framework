	public String[] getAllParameters()
	{
		String[] allParameters = new String[iParametres.getOptions().size() + iParametres.getParametres() + 2];
		allParameters = convertArrayListToString(iParametres.getInterpreteur(), convertArrayListToString(iParametres.getScript(), convertArrayListToString(iParametres.getParametres(), iParametres.getOptions()));
		return allParameters;
	}
	
	public static String[] convertArrayListToString(ArrayList<String> array1)
	{
		String[] commandResult = new String[array1.size()];
		
		ListIterator<String> ite = array1.listIterator();
		int i=0;
		while (ite.hasNext())
		{
			commandResult[i] = ite.next();
			ite.next();
			i++;
		}
		
		return commandResult;
	}
	
	public static String[] assemble(String[] strings1, String[] strings2)
	{
		String[] commandResult;
		commandResult = new String[strings1.length + strings2.length];
		int j = 0;
		for (int i = 0; i < strings1.length; i++)
		{
			commandResult[i] = strings1[i];
			j++;
		}
		for (int i = 0; i < strings2.length; i++)
		{
			commandResult[i + j] = strings2[i];
		}
		return commandResult;
	}
	
	public static String[] assemble(String string1, String[] strings2)
	{
		String[] commandResult;
		commandResult = new String[1 + strings2.length];
		commandResult[0] = string1;
		for (int i = 1; i < strings2.length; i++)
		{
			commandResult[i] = strings2[i];
		}
		return commandResult;
	}
	
	public static String[] assemble(String[] strings1, String string2)
	{
		String[] commandResult;
		commandResult = new String[1 + strings1.length];
		for (int i = 0; i < strings1.length; i++)
		{
			commandResult[i] = strings1[i];
		}
		commandResult[strings1.length] = string2;
		return commandResult;
	}
	
	public static String[] assemble(String string1, String string2)
	{
		String[] commandResult;
		commandResult = new String[2];
		commandResult[0] = string1;
		commandResult[1] = string2;
		return commandResult;
	}
